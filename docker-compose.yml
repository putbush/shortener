version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: links
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Prisma Migrations (run once)
  migrator:
    build: .
    environment:
      DATABASE_URL: postgresql://postgres:123456@postgres:5432/links
    depends_on:
      postgres:
        condition: service_healthy
    command: ["npx", "prisma", "migrate", "deploy"]
    restart: "no"

  # Main Application
  shortener:
    build: .
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://postgres:123456@postgres:5432/links
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Application
      PORT: 3000
      NODE_ENV: production
      
      # Cache Settings
      CACHE_VISITS_THRESHOLD: 5
      CACHE_DEFAULT_EXPIRATION_HOURS: 6
      
      # Rate Limiting
      THROTTLE_LIMIT: 10
      THROTTLE_TTL_MS: 60000
      
      # Link Generation
      LINK_CODE_LENGTH: 7
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
